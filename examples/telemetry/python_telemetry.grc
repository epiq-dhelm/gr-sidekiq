options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: python_telemetry
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '20000000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 12]
    rotation: 0
    state: enabled
- name: blocks_message_strobe_0
  id: blocks_message_strobe
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    msg: pmt.intern("temp")
    period: '2000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [504, 316.0]
    rotation: 0
    state: true
- name: blocks_message_strobe_1
  id: blocks_message_strobe
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    msg: pmt.intern("imu")
    period: '1000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [504, 244.0]
    rotation: 0
    state: true
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nimport pmt\nimport ctypes\nimport os\n\n#Load the C\
      \ shared library\n\nfilename = 'python_telemetry_epy_block_0.py'\nso_path =\
      \ os.path.abspath(os.path.join( os.path.dirname(filename), 'skiq.so'))\nskiq\
      \ = ctypes.CDLL(so_path)\n\n\n\nclass blk(gr.sync_block):  # other base classes\
      \ are basic_block, decim_block, interp_block\n    \"\"\"Embedded Python Block\
      \ example - a simple multiply const\"\"\"\n\n    def __init__(self, card=0):\
      \  # only default arguments here\n        \"\"\"arguments to this function show\
      \ up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n         \
      \   self,\n            name='Python Telemetry',   # will show up in GRC\n  \
      \          in_sig=[np.complex64],\n            out_sig=[np.complex64]\n    \
      \    )\n        # if an attribute with the same name as a parameter is found,\n\
      \        # a callback is registered (properties work, too).\n        self.card\
      \ = card\n        self.selectPortName = 'temp'\n        self.message_port_register_in(pmt.intern(self.selectPortName))\n\
      \        self.set_msg_handler(pmt.intern(self.selectPortName), self.handle_temp_msg)\n\
      \n        self.selectPortName = 'imu'\n        self.message_port_register_in(pmt.intern(self.selectPortName))\n\
      \        self.set_msg_handler(pmt.intern(self.selectPortName), self.handle_imu_msg)\n\
      \        self.first = True\n       \n\n    def handle_temp_msg(self, msg):\n\
      \        temp = ctypes.c_int(0)\n\n        skiq.get_temp(ctypes.byref(temp))\n\
      \n        print(\"\\nTemp in Celsius: \", temp.value, \"\\n\")\n\n    def handle_imu_msg(self,\
      \ msg):\n        acc_x = ctypes.c_int(0)\n        acc_y = ctypes.c_int(0)\n\
      \        acc_z = ctypes.c_int(0)\n        gyro_x = ctypes.c_int(0)\n       \
      \ gyro_y = ctypes.c_int(0)\n        gyro_z = ctypes.c_int(0)\n\n        skiq.get_imu(ctypes.byref(acc_x),\
      \ ctypes.byref(acc_y), ctypes.byref(acc_z), \n                      ctypes.byref(gyro_x),\
      \ ctypes.byref(gyro_x), ctypes.byref(gyro_x) )\n\n        print(\"\\nIMU: AX:\
      \ \", acc_x.value, \"AY: \", acc_y.value, \"AZ: \",  acc_z.value, \"GX: \",\
      \ gyro_x.value , \"GY: \",  gyro_y.value, \"GZ: \",  gyro_z.value, \"\\n\")\
      \ \n\n\n    def work(self, input_items, output_items):\n        if self.first\
      \ == True:\n            c_card = ctypes.c_byte(self.card)\n            skiq.init_card(c_card)\n\
      \            self.first = False\n        output_items[0][:] = input_items[0]\
      \ \n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    card: '0'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Python Telemetry', 'blk', [('card', '0')], [('0', 'complex', 1),
      ('imu', 'message', 1), ('temp', 'message', 1)], [('0', 'complex', 1)], 'Embedded
      Python Block example - a simple multiply const', ['card'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [904, 184.0]
    rotation: 0
    state: true
- name: qtgui_freq_sink_x_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    norm_window: 'False'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1112, 88.0]
    rotation: 0
    state: true
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1112, 328.0]
    rotation: 0
    state: true
- name: sidekiq_sidekiq_rx_0
  id: sidekiq_sidekiq_rx
  parameters:
    affinity: ''
    alias: ''
    bandwidth: 18e6
    cal_mode: '0'
    cal_type: '0'
    card: '0'
    comment: ''
    frequency: 1000e6
    gain_index: '1'
    gain_mode: '1'
    handle1: '0'
    handle2: '100'
    maxoutbuf: '0'
    minoutbuf: '0'
    pps_source: '0'
    run_cal: '0'
    sample_rate: samp_rate
    timestamp_tags: '0'
    trigger_src: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [472, 12.0]
    rotation: 0
    state: true

connections:
- [blocks_message_strobe_0, strobe, epy_block_0, temp]
- [blocks_message_strobe_1, strobe, epy_block_0, imu]
- [epy_block_0, '0', qtgui_freq_sink_x_0, '0']
- [epy_block_0, '0', qtgui_time_sink_x_0, '0']
- [sidekiq_sidekiq_rx_0, '0', epy_block_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.5.1
