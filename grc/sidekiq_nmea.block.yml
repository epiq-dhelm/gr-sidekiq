id: sidekiq_nmea
label: nmea
category: '[sidekiq]'

templates:
  imports: from gnuradio import sidekiq
  make: sidekiq.nmea(${port})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
- id: port
  label: Port
  dtype: string
  default: '/dev/ttySKIQ_UART1'#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)

  #- id: ...
#  label: ...
#  dtype: ...

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
#- label: ...
#  domain: ...
#  dtype: ...
#  vlen: ...
#  optional: ...

outputs:
- label: out_txt
  domain: message
  dtype: string
#  vlen: ...
#  optional: ...

- label: out
  domain: stream
  dtype: byte
#  vlen: ...
#  optional: ...
#- label: ...
#  domain: ...
#  dtype: ...
#  vlen: ...
#  optional: ...

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
