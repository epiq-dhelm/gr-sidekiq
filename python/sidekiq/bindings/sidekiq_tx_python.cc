/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually
 * edited  */
/* The following lines can be configured to regenerate this file during cmake */
/* If manual edits are made, the following tags should be modified accordingly.
 */
/* BINDTOOL_GEN_AUTOMATIC(0) */
/* BINDTOOL_USE_PYGCCXML(0) */
/* BINDTOOL_HEADER_FILE(sidekiq_tx.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(544ed70979c9eaa8375ca509b69fba73) */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/sidekiq/sidekiq_tx.h>
// pydoc.h is automatically generated in the build directory
#include <sidekiq_tx_pydoc.h>

void bind_sidekiq_tx(py::module &m) {

  using sidekiq_tx = ::gr::sidekiq::sidekiq_tx;

  py::class_<sidekiq_tx, gr::sync_block, gr::block, gr::basic_block,
             std::shared_ptr<sidekiq_tx>>(m, "sidekiq_tx", D(sidekiq_tx))

      .def(py::init(&sidekiq_tx::make), py::arg("input_card_number"),
           py::arg("handle"), py::arg("sample_rate"), py::arg("attenuation"),
           py::arg("frequency"), py::arg("bandwidth"), py::arg("sync_type"),
           py::arg("suppress_tune_transients"), py::arg("dataflow_mode"),
           py::arg("threads"), py::arg("buffer_size"), D(sidekiq_tx, make))

      .def("set_tx_sample_rate", &sidekiq_tx::set_tx_sample_rate,
           py::arg("value"), D(sidekiq_tx, set_tx_sample_rate))

      .def("set_tx_attenuation", &sidekiq_tx::set_tx_attenuation,
           py::arg("value"), D(sidekiq_tx, set_tx_attenuation))

      .def("set_tx_frequency", &sidekiq_tx::set_tx_frequency, py::arg("value"),
           D(sidekiq_tx, set_tx_frequency))

      .def("set_tx_bandwidth", &sidekiq_tx::set_tx_bandwidth, py::arg("value"),
           D(sidekiq_tx, set_tx_bandwidth))

      .def("set_tx_suppress_tune_transients",
           &sidekiq_tx::set_tx_suppress_tune_transients,
           py::arg("suppress_tune_transients"),
           D(sidekiq_tx, set_tx_suppress_tune_transients))

      .def("set_tx_filter_override_taps",
           &sidekiq_tx::set_tx_filter_override_taps, py::arg("taps"),
           D(sidekiq_tx, set_tx_filter_override_taps))

      ;
}
